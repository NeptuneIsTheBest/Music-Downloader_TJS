//LanguageProcess 用于处理界面语言
//Copyright (C) 2015 一个二百五2 All Rights Reserved.版权所有

var language = %[];

var languagearea = ['ui', 'description', 'menu', 'error'];
var baseinformation = ['languageCode','languageName','version','font'];
var elementsList = %[];
elementsList['ui'] = [
    'SearchButton',
    'LastPageButton',
    'NextPageButton',
    'DownloadButton',
    'DownloadMVButton',
    'DownloadLRCButton',
    'SeeViewsButton',
    'GoBackButton',
    'Progressing',
    'ProgressLeftTime',
    'NewStatusTextNew',
    'NewStatusTextExclusive',
    'TitleInformText',
    'SingerInformText',
    'AlbumInformText',
    'ErrorReportTitle',
    'InitializationError1',
    'FeedbackTitle',
    'UpdatePleaseWaitInformText'
];
elementsList['description'] = [
    'MultipleStartupCheckDescription',
    'ErrorReportDescription',
    'ErrorReportReportingDescription',
    'WarningInUserSettingsFile',
    'FeedbackPleaseInputYourFeedback',
    'FeedbackPleaseInputYourContactDetails',
    'FeedbackThankyou'
];
elementsList['menu'] = [
    'Provider',
    'ProviderQM',
    'ProviderNE',
    'CleanTempFolder',
    'CleanTempFolder_Cleaning',
    'MultiThreadedDownload',
    'EnableMultiThreadedDownload',
    'MultiThreadedDownloadThreadsNumber',
    'MultiThreadedDownloadThreadsNumberAuto',
    'MultiThreadedDownloadThreadsNumberTwo',
    'MultiThreadedDownloadThreadsNumberFour',
    'MusicQuality',
    'MusicQualityStandard',
    'MusicQualityHigh',
    'MusicQualityLossless',
    'MVQuality',
    'Setting',
    'MusicSavePath',
    'SetMusicSavePath',
    'OpenMusicSavePath',
    'MVsSavePath',
    'SetMVsSavePath',
    'OpenMVsSavePath',
    'SaveLRCUsingUTF8',
    'CleaningTempFolderMenuInform',
    'CleanTempFolderCompleteMenuInform',
    'CleanTempFolderFailMenuInform',
    'SearchStartMenuInform',
    'SearchCompleteMenuInform',
    'CacheAlbumArtMenuInform',
    'CacheAlbumArtCompleteMenuInform',
    'DownloadStartMenuInform',
    'DownloadMVStartMenuInform',
    'DownloadLRCStartMenuInform',
    'GetViewsStartMenuInform',
    'GetCompleteMenuInform',
    'DownloadCompleteMenuInform',
    'PageNumInform',
    'Feedback',
    'About',
    'Update',
    'UpdateCheckStartMenuInform',
    'UpdateCheckSuccessfulMenuInform',
    'UpdateCheckFailMenuInform',
    'UpdateAlreadyLastestMenuInform',
    'UpdateFindNewMenuInform'
];
elementsList['error'] = [
    'RuntimeError',
    'ReadUserSettingsError'
];
for(var i = 0; i < languagearea.count; i++){
    language[ languagearea[i] ] = %[];
    for(var j = 0; j < elementsList[languagearea[i]].count; j++){
        language[ languagearea[i] ][elementsList[ languagearea[i] ][j]] = "%s.%s".sprintf(languagearea[i],elementsList[ languagearea[i] ][j]);
    }
}

function loadLanguageFile(file){
    try{
        var loadedLanguageFile = %[];
        var languagearea = ['ui', 'description', 'menu', 'error'];
        var baseinformation = ['languageCode','languageName','version','font'];
        loadedLanguageFile = Scripts.evalStorage(file);
        if (typeof loadedLanguageFile != "Object"){
            System.inform("读取语言文件时出现错误！\n\nAn Expection occoured while loading the language file!");
            return 0;
        }
        for(var i = 0; i < baseinformation.count; i++){
            language[ baseinformation[i] ] = string(loadedLanguageFile[baseinformation[i]]);
        }
        for(var i = 0; i < languagearea.count; i++){
            language[ languagearea[i] ] = %[];
            for(var j = 0; j < loadedLanguageFile[ languagearea[i] ].count; j++){
                var ElementName = string(loadedLanguageFile[languagearea[i]][j]['Element']);
                if(ElementName.trim() == "" || typeof ElementName !== "String")
                    continue;
                var Translation = string(loadedLanguageFile[languagearea[i]][j]['Translation']);
                if(Translation.trim() !== "" && typeof Translation == "String"){
                    language[languagearea[i]][ElementName] = Translation;
                }else{
                    language[languagearea[i]][ElementName] = "%s.%s".sprintf(languagearea[i],ElementName);
                }
            }
        }
    }catch(e){
        throw e.message;
        return 0;
    }
    return 1;
}

function addEmptyElements( element){
    return %[ "Element" => element, "Translation" => ""];
}

//输出一个基本语言文件（不含文本）
function outPutBaseLanguageFile(Path){
    var outPutLanguageFile = %[];
    for(var i = 0; i < baseinformation.count; i++){
        outPutLanguageFile[baseinformation[i]] = '';
    }
    for(var i = 0; i < languagearea.count; i++){
        outPutLanguageFile[ languagearea[i] ] = [];
        for(var j = 0; j < elementsList[languagearea[i]].count; j++){
            outPutLanguageFile[ languagearea[i] ][j] = addEmptyElements( elementsList[ languagearea[i] ][j] );
        }
    }
    (Dictionary.saveStruct incontextof outPutLanguageFile)(Path + "BaseLanguage.language");
}