//歌曲搜索窗口 - 配套 QMS(QQMusicService) NEMS(NetEastMusicService)使用
//使用方法：Scripts.execStorage执行本文件

/*

***** 使用了来自 一个二百五2 的 QQMusicService *****
***** 请确保 QQMusicService.tjs NetEastMusicService.tjs和 KAGLayer.tjs EditLayer.tjs 可以使用（必选） *****

***** 如果存在 fstat.dll 可以获得更好的使用体验（可选） *****

*/
//Copyright (C) 2015 一个二百五2 All Rights Reserved.版权所有

//========================================================================================
var QMS_MainVersion = "0.2.9.11";
var QMS_VersionString = QMS_MainVersion + " 'New beginning!' Relesaed in 202101";

class QMS_searchwindow extends Window{
    function QMS_searchwindow(){
        super.Window();
        caption = "Music Downloader " + QMS_VersionString;
        setInnerSize(800,350);
        setMinSize(800,350);
        visible = 1;
        try{
            showScrollBars = false;
        }catch(e){
            Debug.message(e.message);
        }
        borderStyle = bsSingle;
    }

    function finalize(){
        super.finalize(...);
        visible = 0;
    }
}

class QMS_ButtonLayer extends Layer{
    var ButtonText;
    var new_Status;
    var is_only;

    function QMS_ButtonLayer( baiscLayer, left, top, width, height, text, fontheight, hintText = void , newStatus ,isonly){
        super.Layer(QMS_searchMainWindow , baiscLayer);
        if (fontheight == void || (typeof fontheight != "Integer" && typeof fontheight != "Real"))
            fontheight = height * 0.7;
        ButtonText = text;
        new_Status = newStatus;
        is_only = isonly;
        setPos(left,top,width,height);
        hitType = htMask;
        hitThreshold = 0;
        focusable = true;
        visible = 1;
        colorRect(0,0,width,height,0xD3D3D3,255);
        font.height = fontheight;
        font.face = language.font;
        cursor = crHandPoint;
        if(font.getTextWidth(ButtonText) < width){
            drawText((width - font.getTextWidth(ButtonText)) / 2,(height - font.height) / 2,ButtonText,0x000000,255);
        }else {
            drawText(0,(height - font.height) / 2,ButtonText,0x000000,255);
            hint = ButtonText;
        }
        if (hintText != void)
            hint = hintText;
        if ( newStatus == 1 && isonly == 1){
            drawText(0,(height - font.height) / 2, "["+language.ui.NewStatusTextNew + "]"+"["+language.ui.NewStatusTextExclusive+"]",0x008000,255);
        }else if( newStatus == 1){
            drawText(0,(height - font.height) / 2,  "[" + language.ui.NewStatusTextNew + "]",0x008000,255);
        }else if( isonly == 1){
            drawText(0,(height - font.height) / 2, "[" + language.ui.NewStatusTextExclusive + "]",0x008000,255);
        }
    }

    function onMouseDown(){
        colorRect(0,0,width,height,0xA9A9A9,255);
        if(font.getTextWidth(ButtonText) < width){
            drawText((width - font.getTextWidth(ButtonText)) / 2,(height - font.height) / 2,ButtonText,0x000000,255);
        }else {
            drawText(0,(height - font.height) / 2,ButtonText,0x000000,255);
        }
        if ( new_Status == 1 && is_only == 1){
            drawText(0,(height - font.height) / 2, "["+language.ui.NewStatusTextNew + "]"+"["+language.ui.NewStatusTextExclusive+"]",0x008000,255);
        }else if( new_Status == 1){
            drawText(0,(height - font.height) / 2, "[" + language.ui.NewStatusTextNew + "]",0x008000,255);
        }else if( is_only == 1){
            drawText(0,(height - font.height) / 2, "[" + language.ui.NewStatusTextExclusive + "]",0x008000,255);
        }
    }

    function onMouseUp(){
        colorRect(0,0,width,height,0xD3D3D3,255);
        if(font.getTextWidth(ButtonText) < width){
            drawText((width - font.getTextWidth(ButtonText)) / 2,(height - font.height) / 2,ButtonText,0x000000,255);
        }else {
            drawText(0,(height - font.height) / 2,ButtonText,0x000000,255);
        }
        if ( new_Status == 1 && is_only == 1){
            drawText(0,(height - font.height) / 2, "["+language.ui.NewStatusTextNew + "]"+"["+language.ui.NewStatusTextExclusive+"]",0x008000,255);
        }else if( new_Status == 1){
            drawText(0,(height - font.height) / 2, "[" + language.ui.NewStatusTextNew + "]",0x008000,255);
        }else if( is_only == 1){
            drawText(0,(height - font.height) / 2, "[" + language.ui.NewStatusTextExclusive + "]",0x008000,255);
        }
    }
}

try{
    QMS_searchMainWindow.visible = 0;
}catch (e) {
    Debug.message(e.message);
}

var QMS_searchMainWindow = new QMS_searchwindow();
var QMS_searchMainWindow_Activated = true;
QMS_searchMainWindow.onResize = function{
    QMS_BaseLayer.setPos(0,0,QMS_searchMainWindow.innerWidth,QMS_searchMainWindow.innerHeight);
    QMS_ViewsLayer.setPos(0,0,QMS_searchMainWindow.innerWidth,QMS_searchMainWindow.innerHeight);
    QMS_searchEditLayer_onResize();
};
QMS_searchMainWindow.onKeyDown = function(key){
    if (key == 0x0D && QMS_searchMainWindow_Activated){
        QMS_PageNum = 1;
        searchSongs(QMS_searchEditLayer.text);
    }
};
QMS_searchMainWindow.onActivate = function(){
    QMS_searchMainWindow_Activated = true;
};
QMS_searchMainWindow.onDeactivate = function(){
    QMS_searchMainWindow_Activated = false;
};
var QMS_Provider = new MenuItem(QMS_searchMainWindow,language.menu.Provider);
var QMS_ProviderQM = new MenuItem(QMS_searchMainWindow,language.menu.ProviderQM);
var QMS_ProviderNE = new MenuItem(QMS_searchMainWindow,language.menu.ProviderNE);
var QMS_MenuCleanTemp = new MenuItem(QMS_searchMainWindow,language.menu.CleanTempFolder);
var QMS_MultithreadDownload = new MenuItem(QMS_searchMainWindow,language.menu.MultiThreadedDownload);
var QMS_MultithreadDownload_On = new MenuItem(QMS_searchMainWindow,language.menu.EnableMultiThreadedDownload);
var QMS_MultithreadDownload_Setting = new MenuItem(QMS_searchMainWindow,language.menu.MultiThreadedDownloadThreadsNumber);
var QMS_MultithreadDownload_Setting_Auto = new MenuItem(QMS_searchMainWindow,language.menu.MultiThreadedDownloadThreadsNumberAuto);
var QMS_MultithreadDownload_Setting_2 = new MenuItem(QMS_searchMainWindow,language.menu.MultiThreadedDownloadThreadsNumberTwo);
var QMS_MultithreadDownload_Setting_4 = new MenuItem(QMS_searchMainWindow,language.menu.MultiThreadedDownloadThreadsNumberFour);
var QMS_MultithreadDownload_Setting_Num = "auto";
var QMS_SongBrList = new MenuItem(QMS_searchMainWindow,language.menu.MusicQuality);
var QMS_SongBrList_128kb = new MenuItem(QMS_searchMainWindow,"128kb - " + language.menu.MusicQualityStandard);
var QMS_SongBrList_320kb = new MenuItem(QMS_searchMainWindow,"320kb - " + language.menu.MusicQualityHigh);
var QMS_SongBrList_flac = new MenuItem(QMS_searchMainWindow,"flac - " + language.menu.MusicQualityLossless);
var QMS_SongKb = "320";
var QMS_MVBrList = new MenuItem(QMS_searchMainWindow,language.menu.MVQuality);
var QMS_MVBrList_360p = new MenuItem(QMS_searchMainWindow,"360p");
var QMS_MVBrList_480p = new MenuItem(QMS_searchMainWindow,"480p");
var QMS_MVBrList_720p = new MenuItem(QMS_searchMainWindow,"720p");
var QMS_MVBrList_1080p = new MenuItem(QMS_searchMainWindow,"1080");
var QMS_MVKb = "720";
var QMS_MenuSetting = new MenuItem(QMS_searchMainWindow,language.menu.Setting);
var QMS_MenuSetting_songsavepath_Base = new MenuItem(QMS_searchMainWindow,language.menu.MusicSavePath);
var QMS_MenuSetting_songsavepath = new MenuItem(QMS_searchMainWindow,language.menu.SetMusicSavePath);
var QMS_MenuSetting_songsavepath_open = new MenuItem(QMS_searchMainWindow,language.menu.OpenMusicSavePath);
var QMS_MenuSetting_mvsavepath_Base = new MenuItem(QMS_searchMainWindow,language.menu.MVsSavePath);
var QMS_MenuSetting_mvsavepath = new MenuItem(QMS_searchMainWindow,language.menu.SetMVsSavePath);
var QMS_MenuSetting_mvsavepath_open = new MenuItem(QMS_searchMainWindow,language.menu.OpenMVsSavePath);
var QMS_MenuSetting_lrcsave_utf8 = new MenuItem(QMS_searchMainWindow,language.menu.SaveLRCUsingUTF8);
var QMS_songsavepath = Storages.getFullPath(System.exePath + "Download/");
var QMS_mvsavepath = Storages.getFullPath(System.exePath + "Download/");
QMS_MultithreadDownload_Setting_Auto.group = 1;
QMS_MultithreadDownload_Setting_2.group = 1;
QMS_MultithreadDownload_Setting_4.group = 1;
QMS_MultithreadDownload_Setting_Auto.radio = 1;
QMS_MultithreadDownload_Setting_2.radio = 1;
QMS_MultithreadDownload_Setting_4.radio = 1;
QMS_SongBrList_128kb.group = 2;
QMS_SongBrList_320kb.group = 2;
QMS_SongBrList_flac.group = 2;
QMS_SongBrList_128kb.radio = 1;
QMS_SongBrList_320kb.radio = 1;
QMS_SongBrList_flac.radio = 1;
QMS_MVBrList_360p.group = 3;
QMS_MVBrList_480p.group = 3;
QMS_MVBrList_720p.group = 3;
QMS_MVBrList_1080p.group = 3;
QMS_MVBrList_360p.radio = 1;
QMS_MVBrList_480p.radio = 1;
QMS_MVBrList_720p.radio = 1;
QMS_MVBrList_1080p.radio = 1;
QMS_ProviderNE.radio = 4;
QMS_ProviderQM.radio = 4;
var QMS_MenuInformDisplay = new MenuItem(QMS_searchMainWindow,"");
var QMS_MenuPageDisplay = new MenuItem(QMS_searchMainWindow,"");
QMS_SongBrList_320kb.checked = true;
QMS_MVBrList_720p.checked = true;
QMS_MenuInformDisplay.enabled = 0;
QMS_MenuPageDisplay.enabled = 0;
QMS_ProviderQM.checked = true;
QMS_MultithreadDownload_On.checked = false;
QMS_MultithreadDownload_On.enabled= false;
QMS_MultithreadDownload_Setting_Auto.checked = true;
QMS_MenuSetting_lrcsave_utf8.checked = true;
QMS_ProviderQM.onClick = function{
    QMS_QQMrequest = new QHttpRequest(Window.mainWindow);
    QMS_QQMGetS = new QQMusicService(QMS_QQMrequest);
    QMS_ProviderQM.checked = 1;
    QMS_List_Button = [];
    QMS_List_Button_Function = [];
    QMS_List_ButtonPage = %[];
};
QMS_ProviderNE.onClick = function{
    QMS_QQMrequest = new NEMHttpRequest(Window.mainWindow);
    QMS_QQMGetS = new NEMusicService(QMS_QQMrequest);
    QMS_ProviderNE.checked = 1;
    QMS_List_Button = [];
    QMS_List_Button_Function = [];
    QMS_List_ButtonPage = %[];
};
QMS_MultithreadDownload_On.onClick = function{
    QMS_MultithreadDownload_On.checked = !QMS_MultithreadDownload_On.checked;
    QMS_MultithreadDownload_Setting.visible = QMS_MultithreadDownload_On.checked;
};
QMS_MultithreadDownload_Setting_Auto.onClick = function{
    QMS_MultithreadDownload_Setting_Auto.checked = 1;
    QMS_MultithreadDownload_Setting_Num = "auto";
};
QMS_MultithreadDownload_Setting_2.onClick = function{
    QMS_MultithreadDownload_Setting_2.checked = 1;
    QMS_MultithreadDownload_Setting_Num = "2";
};
QMS_MultithreadDownload_Setting_4.onClick = function{
    QMS_MultithreadDownload_Setting_4.checked = 1;
    QMS_MultithreadDownload_Setting_Num = "4";
};
QMS_SongBrList_128kb.onClick = function{
    QMS_SongBrList_128kb.checked = 1;
    QMS_SongKb = "128";
};
QMS_SongBrList_320kb.onClick = function{
    QMS_SongBrList_320kb.checked = 1;
    QMS_SongKb = "320";
};
QMS_SongBrList_flac.onClick = function{
    QMS_SongBrList_flac.checked = 1;
    QMS_SongKb = "flac";
};
QMS_MVBrList_360p.onClick = function{
    QMS_MVBrList_360p.checked = 1;
    QMS_MVKb = 240;
};
QMS_MVBrList_480p.onClick = function{
    QMS_MVBrList_480p.checked = 1;
    QMS_MVKb = 480;
};
QMS_MVBrList_720p.onClick = function{
    QMS_MVBrList_720p.checked = 1;
    QMS_MVKb = 720;
};
QMS_MVBrList_1080p.onClick = function{
    QMS_MVBrList_1080p.checked = 1;
    QMS_MVKb = 1080;
};
function selectDirectory( initName = System.exePath, Windowtitle = '选择文件夹'){
    var dir = %[
        name : initName,
        title : Windowtitle,
    ];
    var result = Storages.selectDirectory(dir);
    return [ result, dir.name];
}
QMS_MenuSetting_songsavepath.onClick = function{
    var result = selectDirectory(Storages.getLocalName( QMS_songsavepath) ,"设置歌曲下载目录\n\n选择一个文件夹来保存下载的歌曲");
    if (result[0])
        QMS_songsavepath = Storages.getFullPath( result[1] );
};
QMS_MenuSetting_songsavepath_open.onClick = function{
    try{
        System.shellExecute("explorer","/e," + Storages.getLocalName( QMS_songsavepath) +'"');
    }catch(e){
        Debug.message(e.message);
    }
};
QMS_MenuSetting_mvsavepath.onClick = function{
    var result = selectDirectory(Storages.getLocalName( QMS_mvsavepath) ,"设置MV下载目录\n\n选择一个文件夹来保存下载的MV");
    if (result[0])
        QMS_mvsavepath = Storages.getFullPath( result[1] );
};
QMS_MenuSetting_mvsavepath_open.onClick = function{
    try{
        System.shellExecute("explorer","/e," + Storages.getLocalName( QMS_mvsavepath) +'"');
    }catch(e){
        Debug.message(e.message);
    }
};
QMS_MenuSetting_lrcsave_utf8.onClick = function{
    QMS_MenuSetting_lrcsave_utf8.checked = !QMS_MenuSetting_lrcsave_utf8.checked;
};
var QMS_MenuCleanTemp_Tempdirlist = [];
var QMS_i;
QMS_MenuCleanTemp.onClick = function{
    try{
        QMS_MenuCleanTemp.caption = language.menu.CleanTempFolder_Cleaning;
        QMS_MenuInformDisplay.caption = language.menu.CleaningTempFolderMenuInform;
        QMS_MenuCleanTemp_Tempdirlist = Storages.dirlist(System.exePath + "temp/");
        for(QMS_i = 0; QMS_i < QMS_MenuCleanTemp_Tempdirlist.count; QMS_i++){
            if ( Storages.extractStorageExt(QMS_MenuCleanTemp_Tempdirlist[QMS_i]) == ".jpg")
                Storages.deleteFile(System.exePath + "temp/" + QMS_MenuCleanTemp_Tempdirlist[QMS_i]);
        }
        QMS_MenuCleanTemp.caption = language.menu.CleanTempFolder;
        QMS_MenuInformDisplay.caption = language.menu.CleanTempFolderCompleteMenuInform;
    }catch(e){
        Debug.message(e.message);
        QMS_MenuCleanTemp.caption = language.menu.CleanTempFolder;
        QMS_MenuInformDisplay.caption = language.menu.CleanTempFolderFailMenuInform + e.message;
    }
};
QMS_Provider.add(QMS_ProviderQM);
QMS_Provider.add(QMS_ProviderNE);
QMS_MultithreadDownload.add(QMS_MultithreadDownload_On);
QMS_MultithreadDownload.add(QMS_MultithreadDownload_Setting);
QMS_MultithreadDownload_Setting.add(QMS_MultithreadDownload_Setting_Auto);
QMS_MultithreadDownload_Setting.add(QMS_MultithreadDownload_Setting_2);
QMS_MultithreadDownload_Setting.add(QMS_MultithreadDownload_Setting_4);
QMS_SongBrList.add(QMS_SongBrList_128kb);
QMS_SongBrList.add(QMS_SongBrList_320kb);
QMS_SongBrList.add(QMS_SongBrList_flac);
QMS_MVBrList.add(QMS_MVBrList_360p);
QMS_MVBrList.add(QMS_MVBrList_480p);
QMS_MVBrList.add(QMS_MVBrList_720p);
QMS_MVBrList.add(QMS_MVBrList_1080p);
QMS_MenuSetting.add(QMS_MultithreadDownload);
QMS_MenuSetting.add(QMS_MenuSetting_songsavepath_Base);
QMS_MenuSetting_songsavepath_Base.add(QMS_MenuSetting_songsavepath);
QMS_MenuSetting_songsavepath_Base.add(QMS_MenuSetting_songsavepath_open);
QMS_MenuSetting.add(QMS_MenuSetting_mvsavepath_Base);
QMS_MenuSetting_mvsavepath_Base.add(QMS_MenuSetting_mvsavepath);
QMS_MenuSetting_mvsavepath_Base.add(QMS_MenuSetting_mvsavepath_open);
QMS_MenuSetting.add(QMS_MenuSetting_lrcsave_utf8);
QMS_searchMainWindow.menu.add(QMS_Provider);
QMS_searchMainWindow.menu.add(QMS_MenuCleanTemp);
QMS_searchMainWindow.menu.add(QMS_SongBrList);
QMS_searchMainWindow.menu.add(QMS_MVBrList);
QMS_searchMainWindow.menu.add(QMS_MenuSetting);
QMS_searchMainWindow.menu.add(QMS_MenuPageDisplay);
QMS_searchMainWindow.menu.add(QMS_MenuInformDisplay);

var QMS_BaseLayer = new Layer(QMS_searchMainWindow, null);
QMS_BaseLayer.setPos(0,0,QMS_searchMainWindow.width,QMS_searchMainWindow.height);
QMS_BaseLayer.visible = 1;

var QMS_searchEditLayer = new EditLayer(QMS_searchMainWindow, QMS_BaseLayer);


function QMS_searchEditLayer_onResize(){
    QMS_searchEditLayer.setSize(QMS_searchMainWindow.width / 3,QMS_searchMainWindow.height / 8);
    QMS_searchEditLayer.visible = 1;
    QMS_searchEditLayer.color = 0x87CEFA;
    QMS_searchEditLayer.font.height = QMS_searchEditLayer.height * 0.6;
}
QMS_searchEditLayer_onResize();

var QMS_Button_search = new QMS_ButtonLayer(QMS_BaseLayer,QMS_searchEditLayer.width,0,QMS_searchMainWindow.width / 2 - QMS_searchEditLayer.width,QMS_searchEditLayer.height, language.ui.SearchButton);
QMS_Button_search.onClick = function{
    QMS_PageNum = 1;
    searchSongs( QMS_searchEditLayer.text);
};

var QMS_ListLayerBase = new Layer(QMS_searchMainWindow, QMS_BaseLayer);
QMS_ListLayerBase.setPos(0,QMS_Button_search.height,QMS_searchMainWindow.width / 2,QMS_searchMainWindow.height);
QMS_ListLayerBase.visible = 1;
QMS_ListLayerBase.bringToBack();

var QMS_InformShowBase = new Layer(QMS_searchMainWindow, QMS_BaseLayer);
QMS_InformShowBase.visible = 1;

var QMS_InformShowBaseTemp = new Layer(QMS_searchMainWindow, QMS_BaseLayer);
QMS_InformShowBaseTemp.visible = 0;

var QMS_InformText = new Layer(QMS_searchMainWindow, QMS_InformShowBase);
QMS_InformText.visible = 1;

var QMS_QQMrequest = new QHttpRequest(Window.mainWindow);
var QMS_QQMGetS = new QQMusicService(QMS_QQMrequest);

var QMS_CheckSongListReturn = new Timer(checkSongList,"");
QMS_CheckSongListReturn.interval = 10;
QMS_CheckSongListReturn.enabled = 0;

var QMS_PageNum = 1;
var QMS_viewsPage = 1;

var QMS_Key_word;
function searchSongs(key_word ,page = QMS_PageNum){
    if(QMS_ProviderNE.checked)
        page--;
    if (key_word != ""){
        QMS_Key_word = key_word;
        var meun_display_keyword = key_word;
        if (meun_display_keyword.length > 10)
            meun_display_keyword = meun_display_keyword.substr(0,10) + "...";
        QMS_MenuInformDisplay.caption = language.menu.SearchStartMenuInform + meun_display_keyword;
        QMS_QQMGetS.search_song(key_word, page ,20);
        QMS_CheckSongListReturn.enabled = 1;
    }
}
function changePage(key_word ,page = QMS_PageNum){
    if(QMS_ProviderNE.checked)
        page--;
    if (key_word != ""){
        QMS_Key_word = key_word;
        var meun_display_keyword = key_word;
        if (meun_display_keyword.length > 10)
            meun_display_keyword = meun_display_keyword.substr(0,10) + "...";
        QMS_MenuInformDisplay.caption = language.menu.SearchStartMenuInform + meun_display_keyword;
        QMS_QQMGetS.search_song(key_word, page);
        QMS_CheckSongListReturn.enabled = 1;
    }
}

function checkSongList(){
    if(QMS_QQMGetS.getSongListStatus == "COMPLETED"){
        QMS_CheckSongListReturn.enabled = 0;
        PaintList();
        var captionTemp;
        try{
            captionTemp = language.menu.PageNumInform.sprintf(QMS_PageNum);
        }catch{
            captionTemp = "menu.PageNumInform";
        }
        QMS_MenuPageDisplay.caption = captionTemp;
        QMS_MenuInformDisplay.caption = language.menu.SearchCompleteMenuInform;
    }
}

var QMS_List_Button = [];
var QMS_List_Button_Function = [];
var QMS_List_ButtonPage = %[];
var QMS_ListSilder;
var QMS_ListSilderButton;
var cursorPositiony;
var initTop;
function changeSlider(){
    QMS_ListLayerBase.top = (QMS_searchMainWindow.innerHeight - QMS_ListLayerBase.height - QMS_Button_search.height - 1) * (QMS_ListSilderButton.top / (QMS_ListSilder.height - QMS_ListSilderButton.height)) + QMS_Button_search.height + 1;
}
function PaintList(){
    QMS_List_Button = [];
    (Dictionary.clear incontextof QMS_List_ButtonPage)();
    QMS_ListLayerBase.height = 0;
    for (var i = 0; i < QMS_QQMGetS.Song_list.count; i++){
        if (QMS_ListLayerBase.height < (QMS_searchMainWindow.height * 0.1 +1) * i + QMS_searchMainWindow.height * 0.1)
            QMS_ListLayerBase.height = (QMS_searchMainWindow.height * 0.1 +1) * i + QMS_searchMainWindow.height * 0.1;
        QMS_List_Button[i] = %[];
        if(QMS_ProviderQM.checked){
            QMS_List_Button[i] = new QMS_ButtonLayer(QMS_ListLayerBase,0,(QMS_searchMainWindow.height * 0.1 +1) * i,QMS_searchMainWindow.width / 2,QMS_searchMainWindow.height * 0.1,QMS_QQMGetS.Song_list[i].singer[0].title + "-" + QMS_QQMGetS.Song_list[i].title,QMS_searchMainWindow.height * 0.1 * 0.5,, QMS_QQMGetS.Song_list[i].newStatus, QMS_QQMGetS.Song_list[i].isonly);
        }else{
            QMS_List_Button[i] = new QMS_ButtonLayer(QMS_ListLayerBase,0,(QMS_searchMainWindow.height * 0.1 +1) * i,QMS_searchMainWindow.width / 2,QMS_searchMainWindow.height * 0.1,QMS_QQMGetS.Song_list[i].singer + "-" + QMS_QQMGetS.Song_list[i].title,QMS_searchMainWindow.height * 0.1 * 0.5,, QMS_QQMGetS.Song_list[i].newStatus, QMS_QQMGetS.Song_list[i].isonly);
        }
        QMS_List_Button[i].UUID = i;
        QMS_List_Button[i].finalize = function{
            this.visible = 0;
        };
        QMS_List_Button[i].onClick = function{
            PaintSongInform(this.UUID);
        };
    }
    if(QMS_PageNum > 1){
        QMS_ListLayerBase.height = QMS_ListLayerBase.height + (QMS_searchMainWindow.height * 0.1 +1);
        QMS_List_ButtonPage['last'] = new QMS_ButtonLayer(QMS_ListLayerBase,0,(QMS_searchMainWindow.height * 0.1 +1) * QMS_List_Button.count - 1,QMS_searchMainWindow.width / 2,QMS_searchMainWindow.height * 0.1, language.ui.LastPageButton);
        QMS_List_ButtonPage['last'].onClick = function{
            QMS_PageNum--;
            changePage(QMS_searchEditLayer.text);
        };
        QMS_List_Button[QMS_List_Button.count] = "layerlast";
   }
    if ( QMS_QQMGetS.Song_list.count == 20){
        QMS_ListLayerBase.height = QMS_ListLayerBase.height + (QMS_searchMainWindow.height * 0.1 +1);
        QMS_List_ButtonPage['next'] = new QMS_ButtonLayer(QMS_ListLayerBase,0,(QMS_searchMainWindow.height * 0.1 +1) * QMS_List_Button.count - 1,QMS_searchMainWindow.width / 2,QMS_searchMainWindow.height * 0.1, language.ui.NextPageButton);
        QMS_List_ButtonPage['next'].onClick = function{
            QMS_PageNum++;
            changePage(QMS_searchEditLayer.text);
        };
    }
    QMS_ListSilder = new Layer(QMS_searchMainWindow,QMS_BaseLayer);
    QMS_ListSilder.setPos(QMS_ListLayerBase.width + 1,0,QMS_searchMainWindow.width * 0.0375,QMS_searchMainWindow.innerHeight);
    QMS_ListSilder.colorRect(0,0,QMS_ListSilder.width,QMS_ListSilder.height,0x808080,255);
    QMS_ListSilder.visible = 1;
    QMS_ListSilderButton = new QMS_ButtonLayer(QMS_ListSilder,0,0,QMS_ListSilder.width,QMS_ListSilder.height * 0.1,"");
    QMS_ListSilderButton.onMouseDown = function{
	    cursorPositiony = QMS_ListSilder.cursorY;
        initTop = QMS_ListSilderButton.top;
	    QMS_ListSilderButton.onMouseMove = function{
		    if(initTop + (QMS_ListSilder.cursorY - cursorPositiony) >= 0 && initTop + (QMS_ListSilder.cursorY - cursorPositiony) + QMS_ListSilderButton.height <= QMS_ListSilder.height){
                QMS_ListSilderButton.top = initTop + (QMS_ListSilder.cursorY - cursorPositiony);
		    }else if(initTop + (QMS_ListSilder.cursorY - cursorPositiony) < 0){
                QMS_ListSilderButton.top = 0;
            }else{
                QMS_ListSilderButton.top = QMS_ListSilder.height - QMS_ListSilderButton.height;
            }
            changeSlider();
	    };
    };
    QMS_ListSilderButton.onMouseUp = function{
        delete QMS_ListSilderButton.onMouseMove;
        if (QMS_ListSilderButton.top < 0)
            QMS_ListSilderButton.top = 0;
        if (QMS_ListSilderButton.top + QMS_ListSilderButton.height > QMS_searchMainWindow.innerHeight)
            QMS_ListSilderButton.top = QMS_searchMainWindow.innerHeight - QMS_ListSilderButton.height;
        if (QMS_ListLayerBase.top < QMS_Button_search.height)
            QMS_ListLayerBase.top < QMS_Button_search.height + 1;
        changeSlider();
    };
    changeSlider();
    QMS_searchMainWindow.onMouseWheel = function(shift, delta){
        if( QMS_searchMainWindow_Activated){
            if((-delta) > 5){
                QMS_ListSilderButton.top = QMS_ListSilderButton.top + 35;
                if (QMS_ListSilderButton.top + QMS_ListSilderButton.height > QMS_searchMainWindow.innerHeight)
                    QMS_ListSilderButton.top = QMS_searchMainWindow.innerHeight - QMS_ListSilderButton.height;
                delta = 0;
            }
            if((-delta) < -5){
                QMS_ListSilderButton.top = QMS_ListSilderButton.top - 35;
                if (QMS_ListSilderButton.top < 0)
                    QMS_ListSilderButton.top = 0;
                delta = 0;
            }
            changeSlider();
        }
    };
    if(QMS_List_Button.count <= 7){
        QMS_ListSilderButton.visible = false;
        delete QMS_searchMainWindow.onMouseWheel;
    }
}

var QMS_Songmid;
var QMS_Songid;
var QMS_SongTitle;
var QMS_SongSinger;
var QMS_SongPic;
var QMS_Song_album_id;
var QMS_SongMVid;
function PaintSongInform(num){
    QMS_Songmid = QMS_QQMGetS.Song_list[num].song_mid;
    QMS_Songid = QMS_QQMGetS.Song_list[num].song_id;
    QMS_SongMVid = QMS_QQMGetS.Song_list[num].mv_id;
    QMS_Song_album_id = QMS_QQMGetS.Song_list[num].album_id;
    if(QMS_ProviderNE.checked)
        QMS_Song_album_id = QMS_Songmid;
    QMS_InformShowBase.setPos(QMS_searchMainWindow.width / 2 + QMS_ListSilder.width,0,QMS_searchMainWindow.width / 2,QMS_searchMainWindow.height);
    try{
        QMS_SongPicGetCheck.enabled = 0;
        QMS_InformShowBase.colorRect(0,0,QMS_InformShowBase.width,QMS_InformShowBase.height,0xFFFFFF,255);
        QMS_InformShowBaseTemp.loadImages(System.exePath + "temp/" + QMS_Song_album_id + ".jpg");
        QMS_InformShowBaseTemp.setSizeToImageSize();
        QMS_InformShowBase.stretchCopy(0,0,QMS_InformShowBase.width,QMS_InformShowBase.height,QMS_InformShowBaseTemp,0,0,QMS_InformShowBaseTemp.width,QMS_InformShowBaseTemp.height);
    }catch(e){
        QMS_MenuInformDisplay.caption = language.menu.CacheAlbumArtMenuInform;
        QMS_SongPic = QMS_QQMGetS.getMusicPicDownload(QMS_Song_album_id);
        QMS_SongPicGetCheck.enabled = 1;
        Debug.message(e.message);
    }
    QMS_InformText = new Layer(QMS_searchMainWindow, QMS_InformShowBase);
    QMS_InformText.visible = 1;
    QMS_InformText.font.height = QMS_searchMainWindow.height * 0.05;
    QMS_InformText.setPos(0,0,QMS_InformShowBase.width,QMS_InformText.font.height * 3);
    QMS_InformText.font.face = language.font;
    QMS_InformText.colorRect(0,0,QMS_InformText.width,QMS_InformText.height,0xFFFFFF,125);
    QMS_InformText.drawText(0,0,language.ui.TitleInformText+"："+QMS_QQMGetS.Song_list[num].title,0x000000);
    QMS_SongTitle = QMS_QQMGetS.Song_list[num].title;
    if(QMS_ProviderQM.checked){
        QMS_InformText.drawText(0,QMS_InformText.font.height,language.ui.SingerInformText+"："+QMS_QQMGetS.Song_list[num].singer[0].title,0x000000);
        QMS_SongSinger = QMS_QQMGetS.Song_list[num].singer[0].title;
        QMS_InformText.drawText(0,QMS_InformText.font.height * 2,language.ui.AlbumInformText+"："+QMS_QQMGetS.Song_list[num].album.title,0x000000);
    }else{
        QMS_InformText.drawText(0,QMS_InformText.font.height,language.ui.SingerInformText+"："+QMS_QQMGetS.Song_list[num].singer,0x000000);
        QMS_SongSinger = QMS_QQMGetS.Song_list[num].singer;
        QMS_InformText.drawText(0,QMS_InformText.font.height * 2,language.ui.AlbumInformText+"："+QMS_QQMGetS.Song_list[num].album,0x000000);
    }
    if(QMS_SongMVid != "" && QMS_SongMVid != void && QMS_SongMVid != 0){
        QMS_DownloadMVButton.visible = 1;
    }else{
        QMS_DownloadMVButton.visible = 0;
    }
    if( !QMS_ProviderQM.checked){
        QMS_SeeViewsButton.visible = 1;
    }else{
        QMS_SeeViewsButton.visible = 1;
    }
    QMS_viewsPage = 1;
}

var QMS_SongPicGetCheck = new Timer(checkSongPic,"");
QMS_SongPicGetCheck.interval = 10;
QMS_SongPicGetCheck.enabled = 0;

function checkSongPic(){
    if (QMS_QQMGetS.DownloadMusicPicStatus == "COMPLETED"){
        QMS_InformShowBase.setPos(QMS_searchMainWindow.width / 2 + QMS_ListSilder.width,0,QMS_searchMainWindow.width / 2,QMS_searchMainWindow.height);
        try{
            QMS_InformShowBase.colorRect(0,0,QMS_InformShowBase.width,QMS_InformShowBase.height,0xFFFFFF,255);
            QMS_InformShowBaseTemp.loadImages(System.exePath + "temp/" + QMS_Song_album_id + ".jpg");
            QMS_InformShowBaseTemp.setSizeToImageSize();
            QMS_InformShowBase.stretchCopy(0,0,QMS_InformShowBase.width,QMS_InformShowBase.height,QMS_InformShowBaseTemp,0,0,QMS_InformShowBaseTemp.width,QMS_InformShowBaseTemp.height);
        }catch(e){
            Debug.message(e.message);
        }
        QMS_SongPicGetCheck.enabled = 0;
        QMS_MenuInformDisplay.caption = language.menu.CacheAlbumArtCompleteMenuInform;
    }
}

var QMS_DownloadSongButton = new QMS_ButtonLayer(QMS_InformShowBase,0,QMS_searchMainWindow.height * 0.6,QMS_searchMainWindow.width * 0.2, QMS_searchMainWindow.height * 0.1, language.ui.DownloadButton);
QMS_DownloadSongButton.onClick = function{
    QMS_QQMGetS.getMusicDownload(QMS_Songmid, QMS_SongSinger + " - " + QMS_SongTitle ,QMS_SongKb, QMS_songsavepath);
    QMS_onProgressTimer.enabled = 1;
    QMS_MenuInformDisplay.caption = language.menu.DownloadStartMenuInform;
};


var QMS_DownloadMVButton = new QMS_ButtonLayer(QMS_InformShowBase,0,QMS_searchMainWindow.height * 0.7 + 1,QMS_searchMainWindow.width * 0.2, QMS_searchMainWindow.height * 0.1, language.ui.DownloadMVButton);
QMS_DownloadMVButton.onClick = function{
    QMS_QQMGetS.getMVDownload( QMS_SongMVid, QMS_SongSinger + " - " + QMS_SongTitle ,QMS_MVKb, QMS_mvsavepath);
    QMS_onProgressTimer.enabled = 1;
    QMS_MenuInformDisplay.caption = language.menu.DownloadMVStartMenuInform;
};

var QMS_DownloadSongLrcButton = new QMS_ButtonLayer(QMS_InformShowBase,QMS_DownloadSongButton.width + 1,QMS_searchMainWindow.height * 0.6,QMS_searchMainWindow.width * 0.25, QMS_searchMainWindow.height * 0.1, language.ui.DownloadLRCButton, QMS_searchMainWindow.height * 0.1 * 0.7);
QMS_DownloadSongLrcButton.onClick = function{
    QMS_QQMGetS.getMusiclrc(QMS_Songmid, true,QMS_SongSinger + " - " + QMS_SongTitle , QMS_songsavepath, QMS_MenuSetting_lrcsave_utf8.checked);
    QMS_onProgressTimer.enabled = 1;
    QMS_MenuInformDisplay.caption = language.menu.DownloadLRCStartMenuInform;
};

var QMS_SeeViewsButton = new QMS_ButtonLayer(QMS_InformShowBase, QMS_DownloadMVButton.width + 1,QMS_searchMainWindow.height * 0.7 + 1,QMS_searchMainWindow.width * 0.25, QMS_searchMainWindow.height * 0.1, language.ui.SeeViewsButton);
QMS_SeeViewsButton.onClick = function{
    QMS_QQMGetS.getViewsList(QMS_Songid, QMS_viewsPage);
    QMS_onProgressTimer.enabled = 1;
    QMS_ViewsCheckTimer.enabled = 1;
    QMS_MenuInformDisplay.caption = language.menu.GetViewsStartMenuInform;
    QMS_ViewLayer_ShowViewLayer_TextTop = 0;
    QMS_ViewLayer_ShowViewLayer.setPos( 0, QMS_ViewLayer_TopTitle.height, QMS_ViewsLayer.width, QMS_ViewsLayer.height - QMS_ViewLayer_TopTitle.height);
};

var QMS_ViewsCheckTimer = new Timer(QMS_ViewsCheck,"");
QMS_ViewsCheckTimer.interval = 10;
QMS_ViewsCheckTimer.enabled = 0;

function QMS_ViewsCheck(){
    if (QMS_QQMGetS.getViewsListStatus == "COMPLETED"){
        QMS_ViewsCheckTimer.enabled = 0;
        PaintViews();
        QMS_MenuInformDisplay.caption = language.menu.GetCompleteMenuInform;
    }
}

var QMS_ViewsLayer = new Layer( QMS_searchMainWindow, QMS_BaseLayer);
QMS_ViewsLayer.setPos(0,0,QMS_searchMainWindow.innerWidth,QMS_searchMainWindow.innerHeight);
QMS_ViewsLayer.colorRect(0,0,QMS_ViewsLayer.width,QMS_ViewsLayer.height,0xFFFFFF,255);
QMS_ViewsLayer.visible = 0;
var QMS_ViewLayer_TopTitle = new Layer( QMS_searchMainWindow, QMS_ViewsLayer);
QMS_ViewLayer_TopTitle.setPos( 0, 0, QMS_ViewsLayer.width, QMS_ViewsLayer.height * 0.15);
QMS_ViewLayer_TopTitle.visible = 1;
var QMS_ViewLayer_TopTitle_Back = new QMS_ButtonLayer(QMS_ViewLayer_TopTitle, 0, 0, QMS_ViewLayer_TopTitle.width * 0.1, QMS_ViewLayer_TopTitle.height, "<" + language.ui.GoBackButton, QMS_ViewLayer_TopTitle.height * 0.5);
QMS_ViewLayer_TopTitle_Back.onClick = function{
    QMS_searchEditLayer.text = QMS_Songview_searchkeyTemp;
    QMS_ViewsLayer.visible = 0;
    QMS_searchMainWindow.onKeyDown = function(key){
        if (key == 0x0D && QMS_searchMainWindow_Activated){
            searchSongs(QMS_searchEditLayer.text);
        }
    };
};
var QMS_ViewLayer_ShowViewLayer = new Layer( QMS_searchMainWindow, QMS_ViewsLayer);
QMS_ViewLayer_ShowViewLayer.setPos( 0, QMS_ViewLayer_TopTitle.height, QMS_ViewsLayer.width, QMS_ViewsLayer.height - QMS_ViewLayer_TopTitle.height);
QMS_ViewLayer_ShowViewLayer.font.height = QMS_ViewLayer_ShowViewLayer.height * 0.1;
QMS_ViewLayer_ShowViewLayer.visible = 1;
var QMS_ViewLayer_ShowViewLayer_TextTop = 0;
var QMS_Songview_searchkeyTemp = '';
function PaintViews(){
    QMS_Songview_searchkeyTemp = QMS_searchEditLayer.text;
    QMS_searchMainWindow.onKeyDown = function(key){
        if(key == 0x53 && QMS_searchMainWindow_Activated){
            if ( QMS_ViewLayer_ShowViewLayer.top - 20 + QMS_ViewLayer_ShowViewLayer.height >= QMS_searchMainWindow.innerHeight){
                QMS_ViewLayer_ShowViewLayer.top = QMS_ViewLayer_ShowViewLayer.top - 20;
            }else{
                QMS_ViewLayer_ShowViewLayer.top = -( QMS_ViewLayer_ShowViewLayer.height - QMS_searchMainWindow.innerHeight);
            }
        }
        if(key == 0x57 && QMS_searchMainWindow_Activated){
            if ( QMS_ViewLayer_ShowViewLayer.top + 20 <= QMS_ViewLayer_TopTitle.top + QMS_ViewLayer_TopTitle.height){
                QMS_ViewLayer_ShowViewLayer.top = QMS_ViewLayer_ShowViewLayer.top + 20;
            }else{
                QMS_ViewLayer_ShowViewLayer.top = QMS_ViewLayer_TopTitle.top + QMS_ViewLayer_TopTitle.height;
            }
        }
    };
    QMS_ViewsLayer.visible = 1;
    QMS_ViewsLayer.bringToFront();
    QMS_ViewLayer_TopTitle.bringToFront();
    QMS_ViewLayer_TopTitle.colorRect(0,0,QMS_ViewLayer_TopTitle.width,QMS_ViewLayer_TopTitle.height, 0x000000,255);
    QMS_ViewLayer_TopTitle.colorRect(0,0,QMS_ViewLayer_TopTitle.width,QMS_ViewLayer_TopTitle.height - QMS_ViewLayer_TopTitle.height*0.01, 0xFFFFFF,255);
    QMS_ViewLayer_TopTitle.font.height = QMS_ViewLayer_TopTitle.height * 0.7;
    QMS_ViewLayer_TopTitle.drawText( (QMS_ViewLayer_TopTitle.width - QMS_ViewLayer_TopTitle.font.getTextWidth(QMS_SongTitle)) / 2, (QMS_ViewLayer_TopTitle.height - QMS_ViewLayer_TopTitle.font.height) / 2, QMS_SongSinger + "-" + QMS_SongTitle, 0x000000, 255);
    QMS_ViewLayer_ShowViewLayer.colorRect(0,0,QMS_ViewLayer_ShowViewLayer.width,QMS_QQMGetS.Song_views.count * QMS_ViewLayer_ShowViewLayer.font.height,0xFFFFFF,255);
    for (var i = 0; i < QMS_QQMGetS.Song_views.count; i++){
        if ( QMS_ViewLayer_ShowViewLayer.font.getTextWidth( QMS_QQMGetS.Song_views[i].username + "：" + QMS_QQMGetS.Song_views[i].viewtext) <= QMS_ViewLayer_ShowViewLayer.width ){
            QMS_ViewLayer_ShowViewLayer.drawText( 0, QMS_ViewLayer_ShowViewLayer_TextTop, QMS_QQMGetS.Song_views[i].username + "：" + QMS_QQMGetS.Song_views[i].viewtext, 0x000000, 255);
        }else{
            var j;
            var ViewsText = QMS_QQMGetS.Song_views[i].username + "：" + QMS_QQMGetS.Song_views[i].viewtext;
            var substrStart = 0;
            var substrNum = 0;
            for( j = 0; j < ViewsText.length; j++){
                if (QMS_ViewLayer_ShowViewLayer.font.getTextWidth( ViewsText.substr( substrStart) ) < QMS_ViewLayer_ShowViewLayer.width){
                    QMS_ViewLayer_ShowViewLayer.drawText( 0, QMS_ViewLayer_ShowViewLayer_TextTop, ViewsText.substr( substrStart), 0x000000, 255);
                    break;
                }
                substrNum = j - substrStart;
                if ( QMS_ViewLayer_ShowViewLayer.font.getTextWidth( ViewsText.substr( substrStart, substrNum) ) < QMS_ViewLayer_ShowViewLayer.width){
                    continue;
                }else{
                    QMS_ViewLayer_ShowViewLayer.drawText( 0, QMS_ViewLayer_ShowViewLayer_TextTop, ViewsText.substr( substrStart, substrNum - 1), 0x000000, 255);
                    substrStart = j - 1;
                    QMS_ViewLayer_ShowViewLayer_TextTop = QMS_ViewLayer_ShowViewLayer_TextTop + QMS_ViewLayer_ShowViewLayer.font.height;
                    if ( QMS_ViewLayer_ShowViewLayer_TextTop + QMS_ViewLayer_ShowViewLayer.font.height >= QMS_ViewLayer_ShowViewLayer.height)
                        QMS_ViewLayer_ShowViewLayer.height = QMS_ViewLayer_ShowViewLayer.height + QMS_ViewLayer_ShowViewLayer.font.height;
                }
            }
        }
        QMS_ViewLayer_ShowViewLayer_TextTop = QMS_ViewLayer_ShowViewLayer_TextTop + QMS_ViewLayer_ShowViewLayer.font.height;
        if ( QMS_ViewLayer_ShowViewLayer_TextTop + QMS_ViewLayer_ShowViewLayer.font.height >= QMS_ViewLayer_ShowViewLayer.height)
            QMS_ViewLayer_ShowViewLayer.height = QMS_ViewLayer_ShowViewLayer.height + QMS_ViewLayer_ShowViewLayer.font.height;
    }
}

var QMS_onProgressTimer = new Timer(QMS_onProgress,"");
QMS_onProgressTimer.interval = 10;
QMS_onProgressTimer.enabled = 0;

var QMS_onProgressLayer = new Layer(QMS_searchMainWindow, QMS_InformShowBase);
QMS_onProgressLayer.visible = 1;

function QMS_onProgress(){
    QMS_onProgressLayer.font.height = QMS_searchMainWindow.height * 0.05;
    QMS_onProgressLayer.setPos(0,QMS_DownloadMVButton.top + QMS_DownloadMVButton.height,QMS_InformShowBase.width,QMS_InformShowBase.height - QMS_DownloadSongButton.top + QMS_DownloadSongButton.height);
    QMS_onProgressLayer.font.face = language.font;
    QMS_onProgressLayer.colorRect(0,0,QMS_InformText.width,QMS_InformText.height,0xFFFFFF,255);
    QMS_onProgressLayer.drawText(0,0, language.ui.Progressing + QMS_QQMGetS.onProgressPercent + language.ui.ProgressLeftTime + QMS_QQMGetS.onProgressLeftTime,0x000000);
    if (QMS_QQMrequest.readyState == global.HttpRequest.LOADED){
        QMS_onProgressTimer.enabled = 0;
        QMS_MenuInformDisplay.caption = language.menu.DownloadCompleteMenuInform;
    }
}
